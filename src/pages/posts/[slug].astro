---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../components/layout.astro";
import Tag from "../../components/tag.astro";
import DateTag from "../../components/date-tag.astro";
import PostContent from "../../components/post/post-content.astro";
import { getOptimizedImage } from "../../helpers/images";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const coverImage = await getOptimizedImage(post.data.cover, {
  widths: [720, 1080, 1440],
});
---

<Layout title={post.data.title} description={post.data.description}>
  <div>
    <div>
      <h1>{post.data.title}</h1>
      <p class="post-summary">{post.data.description}</p>
    </div>
    <div class="meta">
      <DateTag date={post.data.date} />
      {post.data.tags?.map((tag) => <Tag tag={tag} />)}
    </div>
    {coverImage ? (
      <figure class="cover-image">
        <picture>
          {coverImage.sources?.map((source) => (
            <source srcset={source.srcset} type={source.type} />
          ))}
          <img
            src={coverImage.src}
            alt={post.data.title ?? "Cover image"}
            loading="eager"
            decoding="async"
            width={coverImage.attributes?.width ?? coverImage.width}
            height={coverImage.attributes?.height ?? coverImage.height}
            sizes="(max-width: 900px) 100vw, 840px"
          />
        </picture>
      </figure>
    ) : post.data.cover ? (
      <figure class="cover-image">
        <img src={post.data.cover} alt={post.data.title ?? "Cover image"} loading="eager" decoding="async" />
      </figure>
    ) : null}
  </div>
  <article>
    <PostContent post={post} />
  </article>
</Layout>
